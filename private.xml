<?xml version="1.0"?>
<root>
  <item>
    <name>Xcode Emacs</name>
    <item>
      <name>[ex] Use Control+X as prefix key</name>
      <item>
        <!-- C-x Mode Core -->
        <name>Control+X detail</name>
        <identifier vk_config="true">notsave.private_xcode_emacs_controlX_core</identifier>
        {{ EMACS_MODE_C_X_EXTRA }}
        <autogen>__ShowStatusMessage__ C-x Mode</autogen>

        <appendix>C-x C-s to Save (Command+S)</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::S, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
          KeyCode::S, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

        <appendix>C-x C-c to Quit (Command+Q)</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::C, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
          KeyCode::Q, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

        <appendix>C-x C-f to Open Quickly (Command+Shift+O)</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::F, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
          KeyCode::O, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

        <appendix>C-x u to Undo (Command+Z)</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::NONE,
          KeyCode::Z, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

        <appendix>C-x k to Close (Command+W)</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::K, ModifierFlag::NONE,
          KeyCode::W, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

        <appendix>C-x p to jump to previous tab (Command+{)</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::P, ModifierFlag::NONE,
          KeyCode::JIS_BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

        <appendix>C-x n to jump to next tab (Command+})</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::N, ModifierFlag::NONE,
          KeyCode::JIS_BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

        <appendix>C-x C-g to turn off Control+X Mode</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::G, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlX_core
        </autogen>

      </item>
      <item>
        <name>Enable Control+X</name>
        <only>XCODE</only>
        <identifier>option.private_xcode_emacs_controlX</identifier>
        <autogen>
          __KeyToKey__
          KeyCode::X, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
          KeyCode::VK_CONFIG_FORCE_ON_notsave_private_xcode_emacs_controlX_core
        </autogen>
      </item>
    </item>
    <item>
      <name>[ex] Use Control+Space as MarkSet</name>
      <item>
        <!-- MarkSet Mode Core -->
        <name>MarkSet Mode detail</name>
        <identifier vk_config="true">notsave.private_xcode_emacs_controlSpace_core</identifier>
        <autogen>__ShowStatusMessage__ MarkSet</autogen>
        {{ EMACS_MODE_MARKSET_EXTRA }}
        <appendix>Control+W to Command_L+X</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::X, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlSpace_core,
          Option::NOREPEAT,
        </autogen>

        <appendix>Option+W to Command_L+C</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION  | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::C, ModifierFlag::COMMAND_L,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlSpace_core,
          Option::NOREPEAT,
        </autogen>

        <appendix>Control+G to turn off MarkSet</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::G, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlSpace_core,
          Option::NOREPEAT,
        </autogen>

        <appendix>Control+Space to turn off MarkSet</appendix>
        <autogen>
          __KeyToKey__
          KeyCode::SPACE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_private_xcode_emacs_controlSpace_core,
          Option::NOREPEAT,
        </autogen>
      </item>
      <item>
        <name>Enable Control+Space</name>
        <only>XCODE</only>
        <identifier>option.private_xcode_emacs_controlSpace</identifier>
        <autogen>
          __KeyToKey__
          KeyCode::SPACE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
          KeyCode::VK_LOCK_SHIFT_L_FORCE_ON,
          KeyCode::VK_CONFIG_FORCE_ON_notsave_private_xcode_emacs_controlSpace_core
        </autogen>
      </item>
    </item>
    <item>
      <name>Enable Control+/ for Undo(Command+Z)</name>
      <only>XCODE</only>
      <identifier>option.private_xcode_emacs_controlSlash</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::SLASH, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
        KeyCode::Z, ModifierFlag::COMMAND_L
      </autogen>
    </item>
    <item>
      <name>Enable Control+S for Find(Command+F)</name>
      <only>XCODE</only>
      <identifier>option.private_xcode_emacs_controlS</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::S, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
        KeyCode::F, ModifierFlag::COMMAND_L
      </autogen>
    </item>
    <item>
      <name>Enable Control+P/N for Up/Down</name>
      <only>XCODE</only>
      <identifier>option.private_xcode_emacs_controlPN</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
        KeyCode::CURSOR_UP, ModifierFlag::NONE,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::N, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::NONE,
        KeyCode::CURSOR_DOWN, ModifierFlag::NONE,
      </autogen>
    </item>
    <item>
      <name>Enable Alt+ &lt;/&gt; for Jump beginning/end of text</name>
      <only>XCODE</only>
      <identifier>option.private_xcode_emacs_controlLTRT</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::COMMA, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::NONE,
        KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L,
      </autogen>
    </item>
    <item>
      <name>Enable F3 for Jump definition</name>
      <only>XCODE</only>
      <identifier>option.private_xcode_emacs_f3</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::F3,
        KeyCode::J, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | ModifierFlag::COMMAND_L,
      </autogen>
    </item>
  </item>
</root>
